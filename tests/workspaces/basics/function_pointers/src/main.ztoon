
package mainPkg;
fn printf(str: readonly i8*, ...) -> i32;
fn add (a: i32, b: i32) -> i32
{
    ret a + b;
}

fn add2 (a: i32, b: i32) -> i32
{
    ret a + b + 2;
}

fnPtrArray: (fn (a: i32, b: i32) -> i32)[2];

fn function(a: i32, b: i32, fnPtr: (fn (a: i32, b: i32) -> i32)) -> i32
{
    ret fnPtr(a, b);
}


fn main() -> i32
{
    fnPtr: (fn (a: i32, b: i32) -> i32) = add;

    res: i32 = fnPtr(1,2);

    fnPtrArray = {add, add2};

    c1: bool = res == 3;
    c2: bool = (fnPtrArray[0](1,2) == 3) && (fnPtrArray[1](1,2) == 5);
    c3: bool = function(5,6, add) == add(5,6);
    // for i: i32 = 0; i < 2; i++ {
    //     printf("fnPtrArray[%d]: %d\n", i, fnPtrArray[i](1,2));
    // }
    // printf("fnPtr: %d\n", res);
    ret (c1 && c2) as i32;
}
