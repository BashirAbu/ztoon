package mainPkg;
union Vec <[T, B]>
{
    elements: T[2];
    struct
    {
        x: T;
        y: B;
    }
}

fn <[T, B]> add(a :T, b: T) -> T
{
    ret a + b;
}
struct List<[T]>
{
    item: T;
    next: List<[T]>*;
}

struct Data
{
    i: i8[12];
}

l: List<[Data]>;

fn main() -> i32
{

    add<[i32, i32]>(1,3);
    
           

    v2: Vec<[f64, i32]>;
    v2.elements[1] = 12.04;

    other::printf("v2.y: %d\n", v2.y);
        
  
    other::printf("add<[i32]>(12, 33) = %d\n", add<[i32,i32]>(12, 33));
    other::printf("add<[f64]>(12.5, 33.5) = %f\n", add<[f64, f64]>(12.5, 33.5));
    
    ret 1;
}
